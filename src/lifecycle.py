from __future__ import annotations

import asyncio
from typing import Dict

from aiogram import Bot
from aiogram.types import ReplyKeyboardRemove

from .config import DOT
from .keyboards import reply_kb_share_contact

# tg_id -> message_id –Ω–µ–º–æ–≥–æ —Ç–µ—Ö-—Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–ø–ª–∞–π-–∫–Ω–æ–ø–∫–æ–π
CONTACT_HELPERS: Dict[int, int] = {}

# –ü–µ—Ä-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ª–æ–∫–∏ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–µ–ø–ª–∞–π-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π,
# —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥–≤–æ–π–Ω—ã—Ö "DOT"-—Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –≥–æ–Ω–∫–∞—Ö.
_CONTACT_LOCKS: Dict[int, asyncio.Lock] = {}

def _contact_lock_for(tg_id: int) -> asyncio.Lock:
    lk = _CONTACT_LOCKS.get(tg_id)
    if lk is None:
        lk = asyncio.Lock()
        _CONTACT_LOCKS[tg_id] = lk
    return lk


async def safe_delete(bot: Bot, chat_id: int, message_id: int):
    try:
        await bot.delete_message(chat_id, message_id)
    except Exception:
        pass


async def show_contact_keyboard_silent(bot: Bot, chat_id: int, tg_id: int):
    """
    –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–ø–ª–∞–π-–∫–Ω–æ–ø–∫—É ¬´üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª,
    –ø—Ä–∏–∫—Ä–µ–ø–ª—è—è –µ—ë –∫ —Ç–∏—Ö–æ–º—É DOT-—Å–æ–æ–±—â–µ–Ω–∏—é. –ó–∞—â–∏—â–µ–Ω–æ –ª–æ–∫–æ–º.
    """
    lock = _contact_lock_for(tg_id)
    async with lock:
        if tg_id in CONTACT_HELPERS:
            return
        kb = reply_kb_share_contact()
        msg = await bot.send_message(chat_id, DOT, reply_markup=kb, disable_notification=True)
        CONTACT_HELPERS[tg_id] = msg.message_id


async def hide_contact_keyboard(bot: Bot, chat_id: int, tg_id: int):
    """
    –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —É–¥–∞–ª—è—è –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ DOT-—Å–æ–æ–±—â–µ–Ω–∏–µ,
    –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ "remove"-—Å–æ–æ–±—â–µ–Ω–∏–µ. –ó–∞—â–∏—â–µ–Ω–æ –ª–æ–∫–æ–º.
    """
    lock = _contact_lock_for(tg_id)
    async with lock:
        mid = CONTACT_HELPERS.pop(tg_id, None)
        if mid is None:
            return
        try:
            rm = ReplyKeyboardRemove()
            m = await bot.send_message(chat_id, DOT, reply_markup=rm, disable_notification=True)
            await safe_delete(bot, chat_id, m.message_id)
        except Exception:
            pass
        await safe_delete(bot, chat_id, mid)


async def enforce_no_contact_keyboard(state: str, bot: Bot, chat_id: int, tg_id: int):
    """
    –í–æ –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö, –∫—Ä–æ–º–µ ASK_PHONE/CHANGE_PHONE, —Ä–µ–ø–ª–∞–π-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ.
    """
    if state not in ("ASK_PHONE", "CHANGE_PHONE") and tg_id in CONTACT_HELPERS:
        await hide_contact_keyboard(bot, chat_id, tg_id)
